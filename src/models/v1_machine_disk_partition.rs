/*
 * metal-api
 *
 * API to manage and control plane resources like machines, switches, operating system images, machine sizes, networks, IP addresses and more
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: ulrich.schreiner@gmail.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1MachineDiskPartition {
    /// the partition device name, e.g. sda1
    #[serde(rename = "device")]
    pub device: String,
    /// the partition filesystem
    #[serde(rename = "filesystem")]
    pub filesystem: String,
    /// the partition GPT guid
    #[serde(rename = "gptguid")]
    pub gptguid: String,
    /// the partition GPT type
    #[serde(rename = "gpttyoe")]
    pub gpttyoe: String,
    /// the partition label
    #[serde(rename = "label")]
    pub label: String,
    /// the partition mount options
    #[serde(rename = "mountoptions")]
    pub mountoptions: Vec<String>,
    /// the partition mount point
    #[serde(rename = "mountpoint")]
    pub mountpoint: String,
    /// the partition number
    #[serde(rename = "number")]
    pub number: i64,
    /// the partition properties
    #[serde(rename = "properties")]
    pub properties: ::std::collections::HashMap<String, String>,
    /// the partition size
    #[serde(rename = "size")]
    pub size: i64,
}

impl V1MachineDiskPartition {
    pub fn new(device: String, filesystem: String, gptguid: String, gpttyoe: String, label: String, mountoptions: Vec<String>, mountpoint: String, number: i64, properties: ::std::collections::HashMap<String, String>, size: i64) -> V1MachineDiskPartition {
        V1MachineDiskPartition {
            device,
            filesystem,
            gptguid,
            gpttyoe,
            label,
            mountoptions,
            mountpoint,
            number,
            properties,
            size,
        }
    }
}


