/*
 * metal-api
 *
 * API to manage and control plane resources like machines, switches, operating system images, machine sizes, networks, IP addresses and more
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: ulrich.schreiner@gmail.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1NetworkUpdateRequest {
    /// a description for this entity
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// the unique ID of this entity
    #[serde(rename = "id")]
    pub id: String,
    /// free labels that you associate with this network.
    #[serde(rename = "labels", skip_serializing_if = "Option::is_none")]
    pub labels: Option<::std::collections::HashMap<String, String>>,
    /// a readable name for this entity
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// the prefixes of this network
    #[serde(rename = "prefixes", skip_serializing_if = "Option::is_none")]
    pub prefixes: Option<Vec<String>>,
    /// marks a network as shareable.
    #[serde(rename = "shared", skip_serializing_if = "Option::is_none")]
    pub shared: Option<bool>,
}

impl V1NetworkUpdateRequest {
    pub fn new(id: String) -> V1NetworkUpdateRequest {
        V1NetworkUpdateRequest {
            description: None,
            id,
            labels: None,
            name: None,
            prefixes: None,
            shared: None,
        }
    }
}


