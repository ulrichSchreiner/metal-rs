/*
 * metal-api
 *
 * API to manage and control plane resources like machines, switches, operating system images, machine sizes, networks, IP addresses and more
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: ulrich.schreiner@gmail.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1IpFindRequest {
    /// the address (ipv4 or ipv6) of this ip
    #[serde(rename = "ipaddress", skip_serializing_if = "Option::is_none")]
    pub ipaddress: Option<String>,
    /// the machine an ip address is associated to
    #[serde(rename = "machineid", skip_serializing_if = "Option::is_none")]
    pub machineid: Option<String>,
    /// the name of the ip address
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// the network this ip allocate request address belongs to
    #[serde(rename = "networkid", skip_serializing_if = "Option::is_none")]
    pub networkid: Option<String>,
    /// the prefix of the network this ip address belongs to
    #[serde(rename = "networkprefix", skip_serializing_if = "Option::is_none")]
    pub networkprefix: Option<String>,
    /// the project this ip address belongs to, empty if not strong coupled
    #[serde(rename = "projectid", skip_serializing_if = "Option::is_none")]
    pub projectid: Option<String>,
    /// the tags that are assigned to this ip address
    #[serde(rename = "tags", skip_serializing_if = "Option::is_none")]
    pub tags: Option<Vec<String>>,
    /// the type of the ip address, ephemeral or static
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub _type: Option<String>,
}

impl V1IpFindRequest {
    pub fn new() -> V1IpFindRequest {
        V1IpFindRequest {
            ipaddress: None,
            machineid: None,
            name: None,
            networkid: None,
            networkprefix: None,
            projectid: None,
            tags: None,
            _type: None,
        }
    }
}


