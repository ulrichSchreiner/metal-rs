/*
 * metal-api
 *
 * API to manage and control plane resources like machines, switches, operating system images, machine sizes, networks, IP addresses and more
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: ulrich.schreiner@gmail.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1MachineAllocation {
    #[serde(rename = "boot_info", skip_serializing_if = "Option::is_none")]
    pub boot_info: Option<crate::models::V1BootInfo>,
    /// the console password which was generated while provisioning
    #[serde(rename = "console_password", skip_serializing_if = "Option::is_none")]
    pub console_password: Option<String>,
    /// the time when the machine was created
    #[serde(rename = "created")]
    pub created: String,
    /// a description for this machine
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// the hostname which will be used when creating the machine
    #[serde(rename = "hostname")]
    pub hostname: String,
    #[serde(rename = "image", skip_serializing_if = "Option::is_none")]
    pub image: Option<crate::models::V1ImageResponse>,
    /// the name of the machine
    #[serde(rename = "name")]
    pub name: String,
    /// the networks of this machine
    #[serde(rename = "networks")]
    pub networks: Vec<crate::models::V1MachineNetwork>,
    /// the project id that this machine is assigned to
    #[serde(rename = "project")]
    pub project: String,
    /// indicates whether to reinstall the machine
    #[serde(rename = "reinstall")]
    pub reinstall: bool,
    /// the public ssh keys to access the machine with
    #[serde(rename = "ssh_pub_keys")]
    pub ssh_pub_keys: Vec<String>,
    /// if the allocation of the machine was successful, this is set to true
    #[serde(rename = "succeeded")]
    pub succeeded: bool,
    /// userdata to execute post installation tasks
    #[serde(rename = "user_data", skip_serializing_if = "Option::is_none")]
    pub user_data: Option<String>,
}

impl V1MachineAllocation {
    pub fn new(created: String, hostname: String, name: String, networks: Vec<crate::models::V1MachineNetwork>, project: String, reinstall: bool, ssh_pub_keys: Vec<String>, succeeded: bool) -> V1MachineAllocation {
        V1MachineAllocation {
            boot_info: None,
            console_password: None,
            created,
            description: None,
            hostname,
            image: None,
            name,
            networks,
            project,
            reinstall,
            ssh_pub_keys,
            succeeded,
            user_data: None,
        }
    }
}


